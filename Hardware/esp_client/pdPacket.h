#pragma once
#include <Arduino.h>
#include "pdProtocol.h"
namespace Network
{
	///--------------------------------------------------------------------------------------





	 ///=====================================================================================
	///
	/// Пакет входящих и исходящих данных
	/// 
	/// 
	///--------------------------------------------------------------------------------------
	class APacket
	{
	public:
		///--------------------------------------------------------------------------------------





		 ///=====================================================================================
		///
		/// Constructor.
		///--------------------------------------------------------------------------------------
		APacket();
		///--------------------------------------------------------------------------------------





		 ///=====================================================================================
		///
		/// Destructor
		/// 
		/// 
		///--------------------------------------------------------------------------------------
		virtual ~APacket();
		///--------------------------------------------------------------------------------------



		


		 ///=====================================================================================
		///
		/// создание пакета
		/// 
		/// 
		///--------------------------------------------------------------------------------------
		void create(const int size); //создание пакета
		///--------------------------------------------------------------------------------------



		unsigned char* data(); //возвратим указатель на данные
		int size() const; //возратим размерность данных


		bool isValid() const; //проверка, пакет валидный или нет

		Protocol::THeader *header() const; //возвратим указатель на заголовок
		
		int typeAction()const; //возратим тип пакета действий

		void clear(); //чистка всего пакета


		//заблокируем копирование
		APacket& operator = (const APacket&) = delete;
		APacket(const APacket&) = delete;

	private:

	

		unsigned char mData[Protocol::packetMaxSize];
		int mSize;
	};

}
