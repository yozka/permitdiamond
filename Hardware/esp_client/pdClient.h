#pragma once
#include <Arduino.h>
#include <WiFiUdp.h>
#include "pdMD5.h"
namespace Network
{
	///--------------------------------------------------------------------------------------
	namespace Protocol
	{
		const int bufferSize	= 0xFF; //размер буфера для пакетов
		const int SRC			= 0x9A; //индификатор пакета

		#pragma push pack(1)
	
		//заголовок пакета
		struct THeader
		{
			uint8_t		SRC;		//магическое число индфификатора пакета
			uint32_t	sequence;	//индификатор пакета
			uint8_t		hash[8];	//хешь пакета подпись
			uint8_t		typeCommand;//тип команды
		};
		//


		//система подсчета правельности пакета
		struct TCalcHash
		{
			uint32_t	sequence;	//индификатор пакета
			uint8_t		typeCommand;//тип команды
			uint8_t		token[11];	//закрытый токен доступа
		};

		#pragma pop pack
	}
	///--------------------------------------------------------------------------------------







	 ///=====================================================================================
	///
	/// Система подключения к серверу
	/// 
	/// 
	///--------------------------------------------------------------------------------------
	class AClient
	{
	public:
		///--------------------------------------------------------------------------------------





		 ///=====================================================================================
		///
		/// Constructor.
		///--------------------------------------------------------------------------------------
		AClient();
		///--------------------------------------------------------------------------------------





		 ///=====================================================================================
		///
		/// Destructor
		/// 
		/// 
		///--------------------------------------------------------------------------------------
		virtual ~AClient();
		///--------------------------------------------------------------------------------------



		void begin();	//инциализация считывателя меток
		void update();	//обновление состояния считывания меток



		//заблокируем копирование
		AClient& operator = (const AClient&) = delete;
		AClient(const AClient&) = delete;

	private:




		WiFiUDP			mUdp; //удп протокол связи
		byte			mBuffer[Protocol::bufferSize]; //буфер данных
		
		Utils::AMD5			mMD5;	//расчет контрольных сумм
		Protocol::TCalcHash mHash;	//данные для расчета хеша
	};

}
